# [Question]: Calculate the annual differences in Bitcoin output value averages between two methods: Merged input/output records: Combine the inputs and outputs tables, filter to only output records, and calculate yearly averages. Transactions table: Directly use the output_value field from the transactions table for yearly averages. Show the difference (merged outputs average minus transactions average) only for years with data in both methods.
# [Schema links]: ['INPUTS.block_timestamp', 'INPUTS.value', 'OUTPUTS.block_timestamp', 'OUTPUTS.value', 'TRANSACTIONS.block_timestamp', 'TRANSACTIONS.output_value']
# [Analysis]: # Output: Let’s think step by step.
1. Identify the need to combine the INPUTS and OUTPUTS tables to create a unified transactions dataset, including a 'type' column to distinguish between input and output records.
2. Convert the block_timestamp from microseconds to a datetime format using TO_TIMESTAMP_NTZ(block_timestamp / 1000000) for both INPUTS and OUTPUTS tables.
3. Use UNION ALL to merge the INPUTS and OUTPUTS data into a single CTE named all_transactions.
4. Create a filtered_transactions CTE that selects only the output records (WHERE type = 'output') from the all_transactions CTE and extracts the year from the timestamp.
5. Calculate the yearly average value for the merged outputs in the average_output_values CTE by grouping the filtered_transactions by year and applying AVG(value).
6. Create a average_transaction_values CTE that calculates the yearly average of output_value directly from the TRANSACTIONS table, converting the block_timestamp and extracting the year in the same way.
7. Identify common years between the two methods by joining average_output_values and average_transaction_values on the year column in a common_years CTE.
8. Compute the difference between the transactions average and merged outputs average (avg_transaction_value - avg_output_value) for each common year.
9. Order the final result by year to show the annual differences chronologically.
# [Sql]: WITH all_transactions AS (     SELECT          TO_TIMESTAMP_NTZ("block_timestamp" / 1000000) AS "timestamp",  -- 将时间戳转换为日期时间格式         "value",         'input' AS "type"     FROM          "CRYPTO"."CRYPTO_BITCOIN"."INPUTS"     UNION ALL     SELECT          TO_TIMESTAMP_NTZ("block_timestamp" / 1000000) AS "timestamp",  -- 将时间戳转换为日期时间格式         "value",         'output' AS "type"     FROM          "CRYPTO"."CRYPTO_BITCOIN"."OUTPUTS" ), filtered_transactions AS (     SELECT         EXTRACT(YEAR FROM "timestamp") AS "year",         "value"     FROM          all_transactions     WHERE "type" = 'output' ), average_output_values AS (     SELECT         "year",         AVG("value") AS "avg_value"     FROM          filtered_transactions     GROUP BY "year" ), average_transaction_values AS (     SELECT          EXTRACT(YEAR FROM TO_TIMESTAMP_NTZ("block_timestamp" / 1000000)) AS "year",  -- 同样转换时间戳         AVG("output_value") AS "avg_transaction_value"      FROM          "CRYPTO"."CRYPTO_BITCOIN"."TRANSACTIONS"      GROUP BY "year"      ORDER BY "year" ), common_years AS (     SELECT         ao."year",         ao."avg_value" AS "avg_output_value",         atv."avg_transaction_value"     FROM         average_output_values ao     JOIN         average_transaction_values atv          ON ao."year" = atv."year" )  SELECT     "year",     "avg_transaction_value" - "avg_output_value" AS "difference" FROM     common_years ORDER BY     "year";