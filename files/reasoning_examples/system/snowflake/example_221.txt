# [Question]: In which year did the assignee with the most applications in the patent category 'A61' file the most?
# [Schema links]: ['PUBLICATIONS.cpc', 'PUBLICATIONS.application_number', 'AA.assignee_harmonized', 'AA.filing_date', 'PatentApplications.assignee_harmonized', 'PatentApplications.filing_date', 'AssigneeApplications.total_applications', 'AssigneeApplications.assignee_name', 'AssigneeApplications.filing_year', 'TotalApplicationsPerAssignee.assignee_name', 'TotalApplicationsPerAssignee.total_applications', 'MaxYearForTopAssignee.assignee_name', 'MaxYearForTopAssignee.filing_year', 'MaxYearForTopAssignee.total_applications']
# [Analysis]: # Output: Letâ€™s think step by step.
1. Filter the PUBLICATIONS table for patents in the 'A61' category by checking the cpc code using a LATERAL FLATTEN operation.
2. Extract the first assignee_harmonized and filing_date for each application_number using FIRST_VALUE window function to handle multiple entries.
3. Create a CTE (AA) to store the filtered patents with their assignee and filing date information.
4. Group the AA CTE by application_number to get unique patent applications using ANY_VALUE for assignee_harmonized and filing_date.
5. Create a CTE (PatentApplications) to store the grouped patent application data.
6. Use LATERAL FLATTEN on assignee_harmonized to handle multiple assignees per patent and count applications per assignee per year.
7. Create a CTE (AssigneeApplications) to calculate total applications for each assignee in each filing year.
8. Aggregate the total applications per assignee across all years to find the assignee with the most applications.
9. Create a CTE (TotalApplicationsPerAssignee) to store the top assignee by total applications.
10. Join AssigneeApplications with TotalApplicationsPerAssignee to filter for the top assignee.
11. Find the year where the top assignee had the highest number of applications by ordering by total_applications descending and limiting to 1.
12. Create a CTE (MaxYearForTopAssignee) to store the year with the most applications for the top assignee.
13. Select the filing_year from the MaxYearForTopAssignee CTE as the final result.
# [Sql]: WITH AA AS (     SELECT          FIRST_VALUE("assignee_harmonized") OVER (PARTITION BY "application_number" ORDER BY "application_number") AS assignee_harmonized,         FIRST_VALUE("filing_date") OVER (PARTITION BY "application_number" ORDER BY "application_number") AS filing_date,         "application_number"     FROM          PATENTS.PATENTS.PUBLICATIONS AS pubs         , LATERAL FLATTEN(input => pubs."cpc") AS c     WHERE          c.value:"code" LIKE 'A61%' ),  PatentApplications AS (     SELECT          ANY_VALUE(assignee_harmonized) as assignee_harmonized,         ANY_VALUE(filing_date) as filing_date     FROM AA     GROUP BY "application_number" ),  AssigneeApplications AS ( SELECT      COUNT(*) AS total_applications,     a.value::STRING AS assignee_name,     CAST(FLOOR(filing_date / 10000) AS INT) AS filing_year FROM      PatentApplications     , LATERAL FLATTEN(input => assignee_harmonized) AS a GROUP BY      a.value::STRING, filing_year ),  TotalApplicationsPerAssignee AS (     SELECT         assignee_name,         SUM(total_applications) AS total_applications     FROM          AssigneeApplications     GROUP BY          assignee_name     ORDER BY          total_applications DESC     LIMIT 1 ),  MaxYearForTopAssignee AS (     SELECT         aa.assignee_name,         aa.filing_year,         aa.total_applications     FROM          AssigneeApplications aa     INNER JOIN         TotalApplicationsPerAssignee tapa ON aa.assignee_name = tapa.assignee_name     ORDER BY          aa.total_applications DESC     LIMIT 1 )  SELECT filing_year FROM      MaxYearForTopAssignee