# [Question]: Using segment-level copy number data from the copy_number_segment_allelic_hg38_gdc_r23 dataset restricted to 'TCGA-KIRC' samples, merge these segments with the cytogenetic band definitions in 'CytoBands_hg38' to identify each sample’s maximum copy number per cytoband. Classify these maximum copy numbers into amplifications (>3), gains (=3), homozygous deletions (=0), heterozygous deletions (=1), or normal (=2), then calculate the frequency of each subtype out of the total number of distinct cases, and finally present these frequencies as percentages sorted by chromosome and cytoband.
# [Schema links]: ["TCGA_VERSIONED.COPY_NUMBER_SEGMENT_ALLELIC_HG38_GDC_R23.case_barcode", "TCGA_VERSIONED.COPY_NUMBER_SEGMENT_ALLELIC_HG38_GDC_R23.chromosome", "TCGA_VERSIONED.COPY_NUMBER_SEGMENT_ALLELIC_HG38_GDC_R23.start_pos", "TCGA_VERSIONED.COPY_NUMBER_SEGMENT_ALLELIC_HG38_GDC_R23.end_pos", "TCGA_VERSIONED.COPY_NUMBER_SEGMENT_ALLELIC_HG38_GDC_R23.copy_number", "TCGA_VERSIONED.COPY_NUMBER_SEGMENT_ALLELIC_HG38_GDC_R23.project_short_name", "PROD.CYTOBANDS_HG38.chromosome", "PROD.CYTOBANDS_HG38.cytoband_name", "PROD.CYTOBANDS_HG38.hg38_start", "PROD.CYTOBANDS_HG38.hg38_stop"]
# [Analysis]: Let’s think step by step.
1. Filter the `COPY_NUMBER_SEGMENT_ALLELIC_HG38_GDC_R23` table to include only 'TCGA-KIRC' samples using `project_short_name` = 'TCGA-KIRC'.
2. Group the filtered data by `case_barcode`, `chromosome`, `start_pos`, `end_pos` to calculate the maximum `copy_number` for each segment.
3. Create a CTE named `copy` to store the filtered and aggregated copy number data.
4. Calculate the total distinct `case_barcode` count in the `copy` CTE to determine the total number of cases.
5. Extract cytoband definitions from `CYTOBANDS_HG38` (chromosome, cytoband_name, hg38_start, hg38_stop) into a CTE named `cytob`.
6. Join `copy` with `cytob` on matching chromosomes where segment positions overlap with cytoband positions using conditions: `cytob.hg38_start` between segment start/end or segment start within cytoband boundaries.
7. Create a CTE `joined` to store merged data with overlapping cytobands and their corresponding copy numbers.
8. For each `case_barcode` and cytoband, calculate the maximum `copy_number` in the `cbands` CTE grouped by chromosome, cytoband_name, hg38_start, hg38_stop, and case_barcode.
9. Classify copy_number values into categories (amplification >3, gain =3, homozygous deletion=0, heterozygous deletion=1, normal=2) using CASE statements in the `aberrations` CTE.
10. Sum category counts per cytoband in `aberrations` CTE grouped by chromosome and cytoband_name.
11. Calculate category frequencies by dividing each category's count by the total_cases count and converting to percentages.
12. Join `aberrations` with `total_cases` to include total cases in final output.
13. Order results by `chromosome` and `cytoband_name` for presentation.
# [Sql]: WITH copy AS (   SELECT      "case_barcode",      "chromosome",      "start_pos",      "end_pos",      MAX("copy_number") AS "copy_number"   FROM      "TCGA_MITELMAN"."TCGA_VERSIONED"."COPY_NUMBER_SEGMENT_ALLELIC_HG38_GDC_R23"    WHERE       "project_short_name" = 'TCGA-KIRC'   GROUP BY      "case_barcode",      "chromosome",      "start_pos",      "end_pos" ), total_cases AS (   SELECT COUNT(DISTINCT "case_barcode") AS "total"   FROM copy  ), cytob AS (   SELECT      "chromosome",      "cytoband_name",      "hg38_start",      "hg38_stop"   FROM      "TCGA_MITELMAN"."PROD"."CYTOBANDS_HG38" ), joined AS (   SELECT      cytob."chromosome",      cytob."cytoband_name",      cytob."hg38_start",      cytob."hg38_stop",     copy."case_barcode",     copy."copy_number"     FROM      copy   LEFT JOIN cytob     ON cytob."chromosome" = copy."chromosome"    WHERE      (cytob."hg38_start" >= copy."start_pos" AND copy."end_pos" >= cytob."hg38_start")     OR (copy."start_pos" >= cytob."hg38_start" AND copy."start_pos" <= cytob."hg38_stop") ), cbands AS (   SELECT      "chromosome",      "cytoband_name",      "hg38_start",      "hg38_stop",      "case_barcode",     MAX("copy_number") AS "copy_number"   FROM      joined   GROUP BY      "chromosome",      "cytoband_name",      "hg38_start",      "hg38_stop",      "case_barcode" ), aberrations AS (   SELECT     "chromosome",     "cytoband_name",     -- Amplifications: more than two copies for diploid > 4     SUM( CASE WHEN "copy_number" > 3 THEN 1 ELSE 0 END ) AS "total_amp",     -- Gains: at most two extra copies     SUM( CASE WHEN "copy_number" = 3 THEN 1 ELSE 0 END ) AS "total_gain",     -- Homozygous deletions, or complete deletions     SUM( CASE WHEN "copy_number" = 0 THEN 1 ELSE 0 END ) AS "total_homodel",     -- Heterozygous deletions, 1 copy lost     SUM( CASE WHEN "copy_number" = 1 THEN 1 ELSE 0 END ) AS "total_heterodel",     -- Normal for Diploid = 2     SUM( CASE WHEN "copy_number" = 2 THEN 1 ELSE 0 END ) AS "total_normal"   FROM      cbands   GROUP BY      "chromosome",      "cytoband_name" ) SELECT    aberrations."chromosome",    aberrations."cytoband_name",   total_cases."total",     100 * aberrations."total_amp" / total_cases."total" AS "freq_amp",    100 * aberrations."total_gain" / total_cases."total" AS "freq_gain",   100 * aberrations."total_homodel" / total_cases."total" AS "freq_homodel",    100 * aberrations."total_heterodel" / total_cases."total" AS "freq_heterodel",    100 * aberrations."total_normal" / total_cases."total" AS "freq_normal"   FROM    aberrations,    total_cases ORDER BY    aberrations."chromosome",    aberrations."cytoband_name";