# [Question]: Find the top 10 northernmost addresses in Florida's largest zip code area. What are their address numbers, street names, and types?
# [Schema links]: ['geography_index.geo_id', 'geography_index.geo_name', 'geography_relationships.related_geo_name', 'geography_relationships.related_level', 'geography_relationships.geo_id', 'geography_characteristics.geo_id', 'geography_characteristics.relationship_type', 'geography_characteristics.value', 'us_addresses.number', 'us_addresses.street', 'us_addresses.street_type', 'us_addresses.id_zip', 'us_addresses.state', 'us_addresses.LATITUDE']
# [Analysis]: # Output: Letâ€™s think step by step.
1. Identify the largest zip code area in Florida by calculating the area of each zip code using the `geography_characteristics` table with 'coordinates_geojson' relationship_type.
2. Join `geography_index` (for zip code names/IDs) with `geography_relationships` to filter for zip codes in Florida (state) and the United States (country).
3. Compute the area of each zip code using `ST_AREA(TRY_TO_GEOGRAPHY(value))` and rank them by area descending within Florida using `ROW_NUMBER()`.
4. Create a CTE `zip_areas` to store zip code IDs, names, state, country, and area.
5. Create a CTE `zip_area_ranks` to assign a rank to each zip code based on area, partitioning by country and state.
6. Filter for the top-ranked zip code (largest area) in Florida (state='FL') and United States (country='United States').
7. Join the `us_addresses` table with the top-ranked zip code using `id_zip = geo_id` to get addresses in that zip code.
8. Filter addresses for Florida (state='FL') to ensure correctness.
9. Order the addresses by latitude descending to get the northernmost ones.
10. Limit the result to the top 10 addresses and select the required columns: number, street, street_type.
# [Sql]: WITH zip_areas AS (     SELECT         geo.geo_id,         geo.geo_name AS zip,         states.related_geo_name AS state,         countries.related_geo_name AS country,         ST_AREA(TRY_TO_GEOGRAPHY(value)) AS area     FROM US_ADDRESSES__POI.CYBERSYN.geography_index AS geo     JOIN US_ADDRESSES__POI.CYBERSYN.geography_relationships AS states         ON (geo.geo_id = states.geo_id AND states.related_level = 'State')     JOIN US_ADDRESSES__POI.CYBERSYN.geography_relationships AS countries         ON (geo.geo_id = countries.geo_id AND countries.related_level = 'Country')     JOIN US_ADDRESSES__POI.CYBERSYN.geography_characteristics AS chars         ON (geo.geo_id = chars.geo_id AND chars.relationship_type = 'coordinates_geojson')     WHERE geo.level = 'CensusZipCodeTabulationArea' ),  zip_area_ranks AS (     SELECT         *,         ROW_NUMBER() OVER (PARTITION BY country, state ORDER BY area DESC, geo_id) AS zip_area_rank     FROM zip_areas )  SELECT addr.number, addr.street, addr.street_type FROM US_ADDRESSES__POI.CYBERSYN.us_addresses AS addr JOIN zip_area_ranks AS areas     ON (addr.id_zip = areas.geo_id) WHERE addr.state = 'FL' AND areas.country = 'United States' AND areas.zip_area_rank = 1 ORDER BY LATITUDE DESC LIMIT 10;