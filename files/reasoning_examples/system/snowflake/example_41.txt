# [Question]: Calculate the total circulating supply of 'BNB' tokens (in units divided by 10^18) by summing balances of all non-zero addresses, where each address’s balance equals its total received BNB minus sent BNB. Exclude transactions involving the zero address (0x000...) for both senders and receivers.
# [Schema links]: ["ETHEREUM_BLOCKCHAIN.TOKENS.address", "ETHEREUM_BLOCKCHAIN.TOKEN_TRANSFERS.to_address", "ETHEREUM_BLOCKCHAIN.TOKENS.name", "ETHEREUM_BLOCKCHAIN.TOKEN_TRANSFERS.value", "ETHEREUM_BLOCKCHAIN.TOKEN_TRANSFERS.token_address", "ETHEREUM_BLOCKCHAIN.TOKEN_TRANSFERS.from_address"]
# [Analysis]: Let’s think step by step.
1. Identify the BNB token's address from the `TOKENS` table where `name` is 'BNB'.
2. Calculate the total received BNB for each non-zero `to_address` by summing the `value` divided by 10^18.
3. Calculate the total sent BNB for each non-zero `from_address` by summing the `value` divided by 10^18.
4. Join the received and sent transactions on the address to compute each address's balance (received minus sent).
5. Sum all the balances from the joined results to get the total circulating supply.
# [Sql]: WITH tokenInfo AS (     SELECT "address"     FROM "ETHEREUM_BLOCKCHAIN"."ETHEREUM_BLOCKCHAIN"."TOKENS"     WHERE "name" = 'BNB' ),  receivedTx AS (     SELECT "tx"."to_address" AS "addr",             "tokens"."name" AS "name",             SUM(CAST("tx"."value" AS FLOAT) / POWER(10, 18)) AS "amount_received"     FROM "ETHEREUM_BLOCKCHAIN"."ETHEREUM_BLOCKCHAIN"."TOKEN_TRANSFERS" AS "tx"     JOIN tokenInfo ON "tx"."token_address" = tokenInfo."address"     JOIN "ETHEREUM_BLOCKCHAIN"."ETHEREUM_BLOCKCHAIN"."TOKENS" AS "tokens"       ON "tx"."token_address" = "tokens"."address"     WHERE "tx"."to_address" <> '0x0000000000000000000000000000000000000000'     GROUP BY "tx"."to_address", "tokens"."name" ),  sentTx AS (     SELECT "tx"."from_address" AS "addr",             "tokens"."name" AS "name",             SUM(CAST("tx"."value" AS FLOAT) / POWER(10, 18)) AS "amount_sent"     FROM "ETHEREUM_BLOCKCHAIN"."ETHEREUM_BLOCKCHAIN"."TOKEN_TRANSFERS" AS "tx"     JOIN tokenInfo ON "tx"."token_address" = tokenInfo."address"     JOIN "ETHEREUM_BLOCKCHAIN"."ETHEREUM_BLOCKCHAIN"."TOKENS" AS "tokens"       ON "tx"."token_address" = "tokens"."address"     WHERE "tx"."from_address" <> '0x0000000000000000000000000000000000000000'     GROUP BY "tx"."from_address", "tokens"."name" ),  walletBalances AS (     SELECT r."addr",            COALESCE(SUM(r."amount_received"), 0) - COALESCE(SUM(s."amount_sent"), 0) AS "balance"     FROM receivedTx AS r     LEFT JOIN sentTx AS s       ON r."addr" = s."addr"     GROUP BY r."addr" )  SELECT      SUM("balance") AS "circulating_supply" FROM walletBalances;