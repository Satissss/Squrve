# [Question]: Please provide, for each age from 12 through 18 (inclusive), the total number of deaths and the number of deaths among individuals identified as Black (based on race descriptions containing the word ‘black’), specifically for deaths associated with ICD-10 codes whose descriptions include the word ‘vehicle’ and for deaths associated with ICD-10 codes whose descriptions include the word ‘firearm.’ Use the EntityAxisConditions table to determine which ICD-10 codes were involved in each death, rather than joining ICD-10 code information directly on the death records.
# [Schema links]: ['RACE.Code', 'RACE.Description', 'DEATHRECORDS.Age', 'DEATHRECORDS.Race', 'DEATHRECORDS.Id', 'ENTITYAXISCONDITIONS.DeathRecordId', 'ENTITYAXISCONDITIONS.Icd10Code', 'ICD10CODE.Code', 'ICD10CODE.Description', 'DEATHRECORDS.Age', 'DEATHRECORDS.Race', 'DEATHRECORDS.Id', 'ENTITYAXISCONDITIONS.DeathRecordId', 'ENTITYAXISCONDITIONS.Icd10Code', 'ICD10CODE.Code', 'ICD10CODE.Description']
# [Analysis]: # Output: Let’s think step by step.
1. Identify the need to filter race codes for "Black" by selecting codes from the RACE table where the description contains 'black', and store these codes in a CTE named BlackRace.
2. For vehicle-related deaths: filter ICD10CODE records where the description contains 'vehicle', then join with ENTITYAXISCONDITIONS to get distinct DeathRecordIds associated with these codes.
3. Join the filtered DeathRecordIds from vehicle-related codes with DEATHRECORDS to get death records for ages 12-18, then aggregate by age to count total deaths and count deaths where Race is in the BlackRace codes.
4. Repeat step 2 and 3 for firearm-related deaths: filter ICD10CODE records where description contains 'firearm', get distinct DeathRecordIds, join with DEATHRECORDS for ages 12-18, and aggregate by age to get total and Black counts.
5. Join the vehicle-related results (v) and firearm-related results (g) by age to produce the final output with columns for both categories.
# [Sql]: WITH BlackRace AS (     SELECT CAST("Code" AS INT) AS CODE     FROM DEATH.DEATH.RACE     WHERE LOWER("Description") LIKE '%black%' ) SELECT      v."Age",      v."Total" AS "Vehicle_Total",      v."Black" AS "Vehicle_Black",     g."Total" AS "Gun_Total",      g."Black" AS "Gun_Black" FROM (     SELECT          "Age",          COUNT(*) AS "Total",          COUNT_IF("Race" IN (SELECT CODE FROM BlackRace)) AS "Black"     FROM DEATH.DEATH.DEATHRECORDS d     JOIN (         SELECT              DISTINCT e."DeathRecordId" AS "id"         FROM DEATH.DEATH.ENTITYAXISCONDITIONS e         JOIN (             SELECT *              FROM DEATH.DEATH.ICD10CODE              WHERE LOWER("Description") LIKE '%vehicle%'         ) c          ON e."Icd10Code" = c."Code"     ) f     ON d."Id" = f."id"     WHERE "Age" BETWEEN 12 AND 18     GROUP BY "Age" ) v  -- Vehicle  JOIN (     SELECT          "Age",          COUNT(*) AS "Total",          COUNT_IF("Race" IN (SELECT CODE FROM BlackRace)) AS "Black"     FROM DEATH.DEATH.DEATHRECORDS d     JOIN (         SELECT              DISTINCT e."DeathRecordId" AS "id"         FROM DEATH.DEATH.ENTITYAXISCONDITIONS e         JOIN (             SELECT                  "Code", "Description"              FROM DEATH.DEATH.ICD10CODE             WHERE "Description" LIKE '%firearm%'         ) c          ON e."Icd10Code" = c."Code"     ) f     ON d."Id" = f."id"     WHERE "Age" BETWEEN 12 AND 18     GROUP BY "Age" ) g ON g."Age" = v."Age";