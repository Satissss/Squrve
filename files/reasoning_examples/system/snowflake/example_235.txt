# [Question]: Identify the case barcodes from the TCGA-LAML study with the highest weighted average copy number in cytoband 15q11 on chromosome 15, using segment data and cytoband overlaps from TCGA's genomic and Mitelman databases.
# [Schema links]: ['COPY_NUMBER_SEGMENT_ALLELIC_HG38_GDC_R23.case_barcode', 'COPY_NUMBER_SEGMENT_ALLELIC_HG38_GDC_R23.chromosome', 'COPY_NUMBER_SEGMENT_ALLELIC_HG38_GDC_R23.start_pos', 'COPY_NUMBER_SEGMENT_ALLELIC_HG38_GDC_R23.end_pos', 'COPY_NUMBER_SEGMENT_ALLELIC_HG38_GDC_R23.copy_number', 'COPY_NUMBER_SEGMENT_ALLELIC_HG38_GDC_R23.project_short_name', 'CYTOBANDS_HG38.chromosome', 'CYTOBANDS_HG38.cytoband_name', 'CYTOBANDS_HG38.hg38_start', 'CYTOBANDS_HG38.hg38_stop']
# [Analysis]: # Output: Letâ€™s think step by step.
1. Identify the relevant tables: `COPY_NUMBER_SEGMENT_ALLELIC_HG38_GDC_R23` for segment data and `CYTOBANDS_HG38` for cytoband information.
2. Filter the copy number segment data for the TCGA-LAML study using `project_short_name = 'TCGA-LAML'`.
3. Group the copy number segments by case_barcode, chromosome, start_pos, and end_pos, taking the maximum copy_number for each segment to handle potential duplicates.
4. Create a CTE (copy) to store the filtered and grouped copy number segments.
5. Extract cytoband information (chromosome, cytoband_name, hg38_start, hg38_stop) from the CYTOBANDS_HG38 table into a CTE (cytob).
6. Join the copy and cytob CTEs on chromosome, calculating the overlap between each segment and cytoband using the formula for interval overlap length.
7. Create a CTE (joined) to store the joined data with overlap and copy_number for each segment-cytoband pair.
8. Calculate the weighted average copy number for each case_barcode and cytoband by summing (overlap * copy_number) and dividing by the total overlap, grouping by chromosome, cytoband_name, hg38_start, hg38_stop, and case_barcode.
9. Store the results in a CTE (INFO) with the calculated copy_number.
10. Filter the INFO CTE for chromosome 'chr15' and cytoband_name '15q11'.
11. Order the results by copy_number in descending order to get the highest value first.
12. Limit the output to the top result (highest weighted average copy number) and select only the case_barcode.
# [Sql]: WITH copy AS (   SELECT      "case_barcode",      "chromosome",      "start_pos",      "end_pos",      MAX("copy_number") AS "copy_number"   FROM      "TCGA_MITELMAN"."TCGA_VERSIONED"."COPY_NUMBER_SEGMENT_ALLELIC_HG38_GDC_R23"   WHERE      "project_short_name" = 'TCGA-LAML'   GROUP BY      "case_barcode",      "chromosome",      "start_pos",      "end_pos" ), total_cases AS (   SELECT COUNT(DISTINCT "case_barcode") AS "total"   FROM copy ), cytob AS (   SELECT      "chromosome",      "cytoband_name",      "hg38_start",      "hg38_stop"   FROM      "TCGA_MITELMAN"."PROD"."CYTOBANDS_HG38" ), joined AS (   SELECT      cytob."chromosome",      cytob."cytoband_name",      cytob."hg38_start",      cytob."hg38_stop",      copy."case_barcode",     (ABS(cytob."hg38_stop" - cytob."hg38_start") + ABS(copy."end_pos" - copy."start_pos")        - ABS(cytob."hg38_stop" - copy."end_pos") - ABS(cytob."hg38_start" - copy."start_pos")) / 2.0 AS "overlap",      copy."copy_number"   FROM      copy   LEFT JOIN      cytob   ON      cytob."chromosome" = copy."chromosome"   WHERE      (cytob."hg38_start" >= copy."start_pos" AND copy."end_pos" >= cytob."hg38_start")     OR (copy."start_pos" >= cytob."hg38_start" AND copy."start_pos" <= cytob."hg38_stop") ), INFO AS (   SELECT      "chromosome",      "cytoband_name",      "hg38_start",      "hg38_stop",      "case_barcode",     ROUND(SUM("overlap" * "copy_number") / SUM("overlap")) AS "copy_number"   FROM      joined   GROUP BY      "chromosome", "cytoband_name", "hg38_start", "hg38_stop", "case_barcode" )  SELECT    "case_barcode" FROM    INFO WHERE    "chromosome" = 'chr15'    AND "cytoband_name" = '15q11' ORDER BY    "copy_number" DESC LIMIT 1;