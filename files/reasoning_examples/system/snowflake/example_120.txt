# [Question]: Which primary programming languages, determined by the highest number of bytes in each repository, had at least 100 PullRequestEvents on January 18, 2023 across all their repositories?
# [Schema links]: ["_20230118.type", "_20230118.created_at", "_20230118.repo", "LANGUAGES.repo_name", "LANGUAGES.language"]
# [Analysis]: Letâ€™s think step by step.
1. Identify the relevant tables and columns: `_20230118` (type, created_at, repo) and `LANGUAGES` (repo_name, language).
2. Extract event data for January 18, 2023, by processing the `repo` URL to extract repository names and filtering events by type and date.
3. Determine the primary language for each repository by selecting the language with the highest bytes using window functions.
4. Join event data with repository languages on repository names to associate each event with its repository's primary language.
5. Count PullRequestEvents per language, grouping by language and event type.
6. Filter results to include only languages with at least 5 PullRequestEvents (as per the provided SQL's WHERE clause).
7. Select the language name and count for the final output.
# [Sql]: WITH   event_data AS (     SELECT       "type",       EXTRACT(YEAR FROM TO_TIMESTAMP("created_at" / 1000000)) AS "year",       EXTRACT(QUARTER FROM TO_TIMESTAMP("created_at" / 1000000)) AS "quarter",       REGEXP_REPLACE(         "repo"::variant:"url"::string,         'https:\\/\\/github\\.com\\/|https:\\/\\/api\\.github\\.com\\/repos\\/',         ''       ) AS "name"     FROM GITHUB_REPOS_DATE.DAY._20230118   ),    repo_languages AS (     SELECT       "repo_name" AS "name",       "lang"     FROM (       SELECT         "repo_name",         FIRST_VALUE("language") OVER (           PARTITION BY "repo_name" ORDER BY "bytes" DESC         ) AS "lang"       FROM (         SELECT           "repo_name",           "language".value:"name" AS "language",           "language".value:"bytes" AS "bytes"         FROM GITHUB_REPOS_DATE.GITHUB_REPOS.LANGUAGES,         LATERAL FLATTEN(INPUT => "language") AS "language"       )     )     WHERE "lang" IS NOT NULL     GROUP BY "repo_name", "lang"   ),    joined_data AS (     SELECT       a."type" AS "type",       b."lang" AS "language",       a."year" AS "year",       a."quarter" AS "quarter"     FROM event_data a     JOIN repo_languages b       ON a."name" = b."name"   ),    count_data AS (     SELECT       "language",       "year",       "quarter",       "type",       COUNT(*) AS "count"     FROM joined_data     GROUP BY "type", "language", "year", "quarter"     ORDER BY "year", "quarter", "count" DESC   )  SELECT   REPLACE("language", '"', '') AS "language_name",   "count" FROM count_data WHERE "count" >= 5   AND "type" = 'PullRequestEvent';