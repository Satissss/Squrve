# [Question]: Using the "bitcoin_prices" table, please calculate the daily percentage change in trading volume for each ticker from August 1 to August 10, 2021, ensuring that any volume ending in "K" or "M" is accurately converted to thousands or millions, any "-" volume is treated as zero, only non-zero volumes are used to determine the previous day's volume, and the results are ordered by ticker and date.
# [Schema links]: ['BITCOIN_PRICES.ticker', 'BITCOIN_PRICES.market_date', 'BITCOIN_PRICES.volume']
# [Analysis]: # Output: Letâ€™s think step by step.
1. Identify the need to process the `volume` column to handle suffixes 'K' (thousands) and 'M' (millions), and the '-' character which should be treated as zero.
2. Create a CTE (`cte_adjusted_prices`) to convert the `volume` values: if the last character is 'K', multiply the numeric part by 1000; if 'M', multiply by 1,000,000; if '-', set to 0; otherwise, cast to REAL.
3. Filter the data to include only non-zero volumes for calculating the previous day's volume, as specified.
4. Create a second CTE (`cte_previous_volume`) to use the `LAG` window function partitioned by `ticker` and ordered by the date (converted from the `market_date` string format DD-MM-YYYY to a proper date) to get the previous day's volume.
5. Convert the `market_date` string to a proper date format for ordering in the window function and for filtering the date range.
6. In the main query, select the ticker, market_date, volume, previous_volume, and calculate the daily percentage change as `(volume - previous_volume) / previous_volume * 100.0`, rounded to two decimal places.
7. Filter the results to the date range August 1 to August 10, 2021, using the converted date format.
8. Order the final results by ticker and market_date.
# [Sql]: WITH cte_adjusted_prices AS (   SELECT     "ticker",     "market_date",     CASE       WHEN SUBSTRING("volume", -1) = 'K' THEN CAST(SUBSTRING("volume", 1, LENGTH("volume") - 1) AS REAL) * 1000       WHEN SUBSTRING("volume", -1) = 'M' THEN CAST(SUBSTRING("volume", 1, LENGTH("volume") - 1) AS REAL) * 1000000       WHEN "volume" = '-' THEN 0       ELSE CAST("volume" AS REAL)     END AS volume   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" ), cte_previous_volume AS (   SELECT     "ticker",     "market_date",     volume,     LAG(volume) OVER (       PARTITION BY "ticker"       ORDER BY TO_DATE(SUBSTRING("market_date", 7, 4) || '-' || SUBSTRING("market_date", 4, 2) || '-' || SUBSTRING("market_date", 1, 2), 'YYYY-MM-DD')     ) AS previous_volume   FROM cte_adjusted_prices   WHERE volume != 0 ) SELECT   "ticker",   "market_date",   volume,   previous_volume,   ROUND(     100.0 * (volume - previous_volume) / previous_volume,     2   ) AS daily_change FROM cte_previous_volume WHERE TO_DATE(SUBSTRING("market_date", 7, 4) || '-' || SUBSTRING("market_date", 4, 2) || '-' || SUBSTRING("market_date", 1, 2), 'YYYY-MM-DD')   BETWEEN TO_DATE('2021-08-01', 'YYYY-MM-DD') AND TO_DATE('2021-08-10', 'YYYY-MM-DD') ORDER BY "ticker", "market_date";