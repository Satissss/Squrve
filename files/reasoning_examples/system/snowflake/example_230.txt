# [Question]: In the TCGA-BRCA cohort of patients who are 80 years old or younger at diagnosis and have a pathological stage of Stage I, Stage II, or Stage IIA, calculate the t-statistic derived from the Pearson correlation between the log10-transformed average RNA-Seq expression levels (using HTSeq__Counts + 1) of the gene SNORA31 and the average microRNA-Seq expression levels of all unique microRNAs, only considering pairs with more than 25 samples and where the absolute Pearson correlation coefficient is between 0.3 and 1.0
# [Schema links]: ['CLINICAL.case_barcode', 'CLINICAL.project_short_name', 'CLINICAL.age_at_diagnosis', 'CLINICAL.pathologic_stage', 'RNASEQ_GENE_EXPRESSION.gene_name', 'RNASEQ_GENE_EXPRESSION.HTSeq__Counts', 'RNASEQ_GENE_EXPRESSION.case_barcode', 'MIRNASEQ_EXPRESSION.mirna_id', 'MIRNASEQ_EXPRESSION.reads_per_million_miRNA_mapped', 'MIRNASEQ_EXPRESSION.case_barcode']
# [Analysis]: # Output: Letâ€™s think step by step.
1. Identify the cohort of patients from the CLINICAL table who meet the criteria: project_short_name = 'TCGA-BRCA', age_at_diagnosis <= 80, and pathologic_stage in ('Stage I', 'Stage II', 'Stage IIA').
2. Create a CTE named 'cohort' to store the case_barcode values for these patients.
3. For the gene SNORA31, process the RNASEQ_GENE_EXPRESSION table: filter for cases in the cohort, gene_name = 'SNORA31', and non-null HTSeq__Counts.
4. Compute the log10-transformed average expression (LOG(10, HTSeq__Counts + 1)) for each case, grouped by case_barcode and gene_name.
5. Create a CTE named 'table1' to store these results with columns: symbol, rnkdata, and ParticipantBarcode.
6. For microRNAs, process the MIRNASEQ_EXPRESSION table: filter for cases in the cohort, and non-null mirna_id and reads_per_million_miRNA_mapped.
7. Compute the average expression (AVG(reads_per_million_miRNA_mapped)) for each case and microRNA, grouped by case_barcode and mirna_id.
8. Create a CTE named 'table2' to store these results with columns: symbol, rnkdata, and ParticipantBarcode.
9. Join table1 and table2 on ParticipantBarcode to pair each SNORA31 expression value with every microRNA expression value for the same patient.
10. In a CTE named 'summ_table', group by symbol1 (SNORA31) and symbol2 (microRNA), and compute the count of samples (n) and the Pearson correlation (CORR) between their expression values.
11. In the final SELECT, calculate the t-statistic using the formula: ABS(correlation) * SQRT((n - 2) / (1 - correlation * correlation)).
12. Apply filters: n > 25, ABS(correlation) between 0.3 and 1.0.
# [Sql]: WITH cohort AS (     SELECT "case_barcode"     FROM "TCGA_HG38_DATA_V0"."TCGA_BIOCLIN_V0"."CLINICAL"     WHERE "project_short_name" = 'TCGA-BRCA'         AND "age_at_diagnosis" <= 80         AND "pathologic_stage" IN ('Stage I', 'Stage II', 'Stage IIA') ), table1 AS (     SELECT         "symbol",         "data" AS "rnkdata",         "ParticipantBarcode"     FROM (         SELECT             "gene_name" AS "symbol",              AVG(LOG(10, "HTSeq__Counts" + 1)) AS "data",             "case_barcode" AS "ParticipantBarcode"         FROM "TCGA_HG38_DATA_V0"."TCGA_HG38_DATA_V0"."RNASEQ_GENE_EXPRESSION"         WHERE "case_barcode" IN (SELECT "case_barcode" FROM cohort)             AND "gene_name" = 'SNORA31'             AND "HTSeq__Counts" IS NOT NULL         GROUP BY             "ParticipantBarcode", "symbol"     ) ), table2 AS (     SELECT         "symbol",         "data" AS "rnkdata",         "ParticipantBarcode"     FROM (         SELECT             "mirna_id" AS "symbol",              AVG("reads_per_million_miRNA_mapped") AS "data",             "case_barcode" AS "ParticipantBarcode"         FROM "TCGA_HG38_DATA_V0"."TCGA_HG38_DATA_V0"."MIRNASEQ_EXPRESSION"         WHERE "case_barcode" IN (SELECT "case_barcode" FROM cohort)             AND "mirna_id" IS NOT NULL             AND "reads_per_million_miRNA_mapped" IS NOT NULL         GROUP BY             "ParticipantBarcode", "symbol"     ) ), summ_table AS (     SELECT          n1."symbol" AS "symbol1",         n2."symbol" AS "symbol2",         COUNT(n1."ParticipantBarcode") AS "n",         CORR(n1."rnkdata", n2."rnkdata") AS "correlation"     FROM         table1 AS n1     INNER JOIN         table2 AS n2     ON         n1."ParticipantBarcode" = n2."ParticipantBarcode"     GROUP BY         "symbol1", "symbol2" )  SELECT      "symbol1",      "symbol2",      ABS("correlation") * SQRT(( "n" - 2 ) / (1 - "correlation" * "correlation")) AS "t" FROM      summ_table WHERE      "n" > 25      AND ABS("correlation") >= 0.3      AND ABS("correlation") < 1.0;