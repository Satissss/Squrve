# [Question]: Calculate the chi-square value to assess the association between histological types and the presence of CDH1 gene mutations in BRCA patients using data from the PanCancer Atlas. Focus on patients with known histological types and consider only reliable mutation entries.  Exclude any histological types or mutation statuses with marginal totals less than or equal to 10. Match clinical and mutation data using ParticipantBarcode
# [Schema links]: ['CLINICAL_PANCAN_PATIENT_WITH_FOLLOWUP_FILTERED.acronym', 'CLINICAL_PANCAN_PATIENT_WITH_FOLLOWUP_FILTERED.histological_type', 'CLINICAL_PANCAN_PATIENT_WITH_FOLLOWUP_FILTERED.bcr_patient_barcode', 'MC3_MAF_V5_ONE_PER_TUMOR_SAMPLE.Study', 'MC3_MAF_V5_ONE_PER_TUMOR_SAMPLE.Hugo_Symbol', 'MC3_MAF_V5_ONE_PER_TUMOR_SAMPLE.ParticipantBarcode', 'MC3_MAF_V5_ONE_PER_TUMOR_SAMPLE.FILTER']
# [Analysis]: # Output: Let’s think step by step.
1. Identify the relevant tables: `CLINICAL_PANCAN_PATIENT_WITH_FOLLOWUP_FILTERED` for clinical data and `MC3_MAF_V5_ONE_PER_TUMOR_SAMPLE` for mutation data.
2. Filter clinical data for BRCA patients with non-null histological types using `acronym = 'BRCA'` and `histological_type IS NOT NULL`.
3. Create table1 to select histological types as "data" and patient barcodes from the filtered clinical data.
4. Filter mutation data for BRCA study, CDH1 gene mutations, and reliable entries using `Study = 'BRCA'`, `Hugo_Symbol = 'CDH1'`, and `FILTER = 'PASS'`.
5. Create table2 to select CDH1 mutation status by grouping on ParticipantBarcode to ensure one entry per patient.
6. Perform a left join between table1 and table2 on ParticipantBarcode to combine histological types with mutation status.
7. Create a summary table (summ_table) that counts occurrences for each histological type and mutation status combination (YES/NO for mutation).
8. Calculate marginal totals for histological types (Ni) and mutation statuses (Nj) from the summary table.
9. Filter out rows where either marginal total (Ni or Nj) is ≤10 to exclude small categories.
10. Create an expected table with all valid combinations of histological types and mutation statuses.
11. Build a contingency table by joining the expected table with the summary table, calculating observed counts (Nij) and expected counts (E_nij) using the formula for chi-square expected frequencies.
12. Compute the chi-square statistic by summing (observed - expected)^2 / expected across all cells in the contingency table.
# [Sql]: WITH     table1 AS (         SELECT             "symbol",             "avgdata" AS "data",             "ParticipantBarcode"         FROM (             SELECT                 'histological_type' AS "symbol",                  "histological_type" AS "avgdata",                 "bcr_patient_barcode" AS "ParticipantBarcode"             FROM                  "PANCANCER_ATLAS_1"."PANCANCER_ATLAS_FILTERED"."CLINICAL_PANCAN_PATIENT_WITH_FOLLOWUP_FILTERED"             WHERE                  "acronym" = 'BRCA'                  AND "histological_type" IS NOT NULL               )     ),     table2 AS (         SELECT             "symbol",             "ParticipantBarcode"         FROM (             SELECT                 "Hugo_Symbol" AS "symbol",                  "ParticipantBarcode" AS "ParticipantBarcode"             FROM                  "PANCANCER_ATLAS_1"."PANCANCER_ATLAS_FILTERED"."MC3_MAF_V5_ONE_PER_TUMOR_SAMPLE"             WHERE                  "Study" = 'BRCA'                  AND "Hugo_Symbol" = 'CDH1'                 AND "FILTER" = 'PASS'               GROUP BY                 "ParticipantBarcode", "symbol"         )     ),     summ_table AS (         SELECT              n1."data" AS "data1",             CASE                  WHEN n2."ParticipantBarcode" IS NULL THEN 'NO'                  ELSE 'YES'              END AS "data2",             COUNT(*) AS "Nij"         FROM             table1 AS n1         LEFT JOIN             table2 AS n2              ON n1."ParticipantBarcode" = n2."ParticipantBarcode"         GROUP BY             n1."data", "data2"     ),     expected_table AS (         SELECT              "data1",              "data2"         FROM (                  SELECT                  "data1",                  SUM("Nij") AS "Ni"                FROM                  summ_table             GROUP BY                  "data1"         ) AS Ni_table         CROSS JOIN (              SELECT                  "data2",                  SUM("Nij") AS "Nj"             FROM                  summ_table             GROUP BY                  "data2"         ) AS Nj_table         WHERE              Ni_table."Ni" > 10              AND Nj_table."Nj" > 10     ),     contingency_table AS (         SELECT             T1."data1",             T1."data2",             COALESCE(T2."Nij", 0) AS "Nij",             (SUM(T2."Nij") OVER (PARTITION BY T1."data1")) *              (SUM(T2."Nij") OVER (PARTITION BY T1."data2")) /              SUM(T2."Nij") OVER () AS "E_nij"         FROM             expected_table AS T1         LEFT JOIN             summ_table AS T2         ON              T1."data1" = T2."data1"              AND T1."data2" = T2."data2"     ) SELECT     SUM( ( "Nij" - "E_nij" ) * ( "Nij" - "E_nij" ) / "E_nij" ) AS "Chi2" FROM      contingency_table;