# [Question]: Retrieve the following information for U.S. patents: The patent ID, title, and application date. The number of backward citations within 1 month before the application date (i.e., patents that cited the current patent before its application). The number of forward citations within 1 month after the application date (i.e., patents that cited the current patent after its application). The abstract text of the patent. Only include patents that belong to specific CPC categories, such as subsection 'C05' or group 'A01G'. The query should filter patents to include only those that have at least one backward citation or one forward citation in the 1-month period specified. Sort the results by application date and return all matching records.
# [Schema links]: [application.patent_id, patent.title, application.date, brf_sum_text.text, brf_sum_text.patent_id, patent.id, cpc_current.patent_id, uspatentcitation.patent_id, application.country, uspatentcitation.date, cpc_current.subsection_id, cpc_current.group_id]
# [Analysis]: Letâ€™s think step by step.
1. Identify the required columns: `application.patent_id`, `patent.title`, `application.date`, citation counts, and `brf_sum_text.text` for abstract.
2. Join `brf_sum_text` with `patent` on `patent_id` to link abstract text with patent details.
3. Join `patent` with `application` on `patent_id` to include application date and patent ID.
4. Calculate backward citations as counts where citation date is within 1 month before application date.
5. Calculate forward citations as counts where citation date is within 1 month after application date.
6. Use subqueries to compute backward and forward citation counts for each patent.
7. Combine backward and forward citation counts into a single subquery `citation_1` for each patent.
8. Filter citations to include only patents with at least one backward or forward citation.
9. Join citation counts with `cpc_current` to enforce CPC category filters ('C05' subsection or 'A01G' group).
10. Create a CTE or subquery `filterData` to aggregate citation counts and CPC filters.
11. Join `filterData` with main tables to include citation counts and category constraints.
12. Select required columns from joined tables, including citation counts and abstract text.
13. Apply final sorting by `application.date` to order results chronologically.
# [Sql]: SELECT     app."patent_id" AS "patent_id",     patent."title",     app."date" AS "application_date",     filterData."bkwdCitations_1",     filterData."fwrdCitations_1",     summary."text" AS "summary_text" FROM     PATENTSVIEW.PATENTSVIEW.BRF_SUM_TEXT AS summary JOIN     PATENTSVIEW.PATENTSVIEW.PATENT AS patent     ON summary."patent_id" = patent."id" JOIN     PATENTSVIEW.PATENTSVIEW.APPLICATION AS app     ON app."patent_id" = summary."patent_id" JOIN (     SELECT DISTINCT         cpc."patent_id",         IFNULL(citation_1."bkwdCitations_1", 0) AS "bkwdCitations_1",         IFNULL(citation_1."fwrdCitations_1", 0) AS "fwrdCitations_1"     FROM         PATENTSVIEW.PATENTSVIEW.CPC_CURRENT AS cpc     JOIN (         SELECT             b."patent_id",             b."bkwdCitations_1",             f."fwrdCitations_1"         FROM (             SELECT                 cited."patent_id",                 COUNT(*) AS "fwrdCitations_1"             FROM                 PATENTSVIEW.PATENTSVIEW.USPATENTCITATION AS cited             JOIN                 PATENTSVIEW.PATENTSVIEW.APPLICATION AS apps                 ON cited."patent_id" = apps."patent_id"             WHERE                 apps."country" = 'US'                 AND cited."date" >= apps."date"                 AND TRY_CAST(cited."date" AS DATE) <= DATEADD(MONTH, 1, TRY_CAST(apps."date" AS DATE)) -- Citation within 1 month             GROUP BY                 cited."patent_id"         ) AS f         JOIN (             SELECT                 cited."patent_id",                 COUNT(*) AS "bkwdCitations_1"             FROM                 PATENTSVIEW.PATENTSVIEW.USPATENTCITATION AS cited             JOIN                 PATENTSVIEW.PATENTSVIEW.APPLICATION AS apps                 ON cited."patent_id" = apps."patent_id"             WHERE                 apps."country" = 'US'                 AND cited."date" < apps."date"                 AND TRY_CAST(cited."date" AS DATE) >= DATEADD(MONTH, -1, TRY_CAST(apps."date" AS DATE)) -- Citation within 1 month before             GROUP BY                 cited."patent_id"         ) AS b         ON b."patent_id" = f."patent_id"         WHERE             b."bkwdCitations_1" IS NOT NULL             AND f."fwrdCitations_1" IS NOT NULL             AND (b."bkwdCitations_1" > 0 OR f."fwrdCitations_1" > 0)     ) AS citation_1     ON cpc."patent_id" = citation_1."patent_id"     WHERE         cpc."subsection_id" = 'C05'         OR cpc."group_id" = 'A01G' ) AS filterData ON app."patent_id" = filterData."patent_id" ORDER BY app."date";