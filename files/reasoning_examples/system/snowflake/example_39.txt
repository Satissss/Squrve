# [Question]: About the refined human genetic variations collected in phase 3 on 2015-02-20, I want to know the minimum and maximum start positions as well as the proportions of these two respectively for reference bases 'AT' and 'TA'.
# [Schema links]: ["HUMAN_GENOME_VARIANTS._1000_GENOMES_PHASE_3_OPTIMIZED_SCHEMA_VARIANTS_20150220.reference_bases", "HUMAN_GENOME_VARIANTS._1000_GENOMES_PHASE_3_OPTIMIZED_SCHEMA_VARIANTS_20150220.start_position"]
# [Analysis]: Letâ€™s think step by step.
1. Identify the relevant table and columns: "_1000_GENOMES_PHASE_3_OPTIMIZED_SCHEMA_VARIANTS_20150220" with columns "reference_bases" and "start_position".
2. Filter rows where "reference_bases" is either 'AT' or 'TA' to create a temporary dataset (CTE A).
3. Calculate MIN(start_position), MAX(start_position), and total_count per "reference_bases" in CTE B by grouping the filtered data.
4. Create CTE min_counts to count occurrences of each min_start_position by joining CTE A and B where start_position matches the min value.
5. Create CTE max_counts to count occurrences of each max_start_position by joining CTE A and B where start_position matches the max value.
6. Join CTE B with min_counts and max_counts on "reference_bases" and respective position values to combine aggregate counts.
7. Compute proportions by dividing min_count and max_count by total_count in the final SELECT, casting counts to float for decimal division.
8. Select required columns (reference_bases, min/max positions, ratios) and order results by reference_bases.
# [Sql]: WITH A AS (     SELECT         "reference_bases",         "start_position"     FROM         "HUMAN_GENOME_VARIANTS"."HUMAN_GENOME_VARIANTS"."_1000_GENOMES_PHASE_3_OPTIMIZED_SCHEMA_VARIANTS_20150220"     WHERE         "reference_bases" IN ('AT', 'TA') ), B AS (     SELECT         "reference_bases",         MIN("start_position") AS "min_start_position",         MAX("start_position") AS "max_start_position",         COUNT(1) AS "total_count"     FROM         A     GROUP BY         "reference_bases" ), min_counts AS (     SELECT         A."reference_bases",  -- Explicitly referencing the column from table A         A."start_position" AS "min_start_position",         COUNT(1) AS "min_count"     FROM         A     INNER JOIN B          ON A."reference_bases" = B."reference_bases"     WHERE         A."start_position" = B."min_start_position"     GROUP BY         A."reference_bases", A."start_position" ), max_counts AS (     SELECT         A."reference_bases",  -- Explicitly referencing the column from table A         A."start_position" AS "max_start_position",         COUNT(1) AS "max_count"     FROM         A     INNER JOIN B         ON A."reference_bases" = B."reference_bases"     WHERE         A."start_position" = B."max_start_position"     GROUP BY         A."reference_bases", A."start_position" ) SELECT     B."reference_bases",  -- Explicitly referencing the column from table B     B."min_start_position",     CAST(min_counts."min_count" AS FLOAT) / B."total_count" AS "min_position_ratio",     B."max_start_position",     CAST(max_counts."max_count" AS FLOAT) / B."total_count" AS "max_position_ratio" FROM     B LEFT JOIN     min_counts ON B."reference_bases" = min_counts."reference_bases" AND B."min_start_position" = min_counts."min_start_position" LEFT JOIN     max_counts ON B."reference_bases" = max_counts."reference_bases" AND B."max_start_position" = max_counts."max_start_position" ORDER BY     B."reference_bases";