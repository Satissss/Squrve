# [Question]: Can you provide a breakdown of how many times each product was viewed, how many times they were added to the shopping cart, and how many times they were left in the cart without being purchased? Also, give me the count of actual purchases for each product. Ensure that products with a page id in (1, 2, 12, 13) are filtered out.
# [Schema links]: ['SHOPPING_CART_PAGE_HIERARCHY.page_id', 'SHOPPING_CART_PAGE_HIERARCHY.product_id', 'SHOPPING_CART_EVENTS.page_id', 'SHOPPING_CART_EVENTS.event_type', 'SHOPPING_CART_EVENTS.visit_id', 'SHOPPING_CART_PAGE_HIERARCHY.page_name']
# [Analysis]: # Output: Letâ€™s think step by step.
1. Identify the need to count different event types for products: views (event_type=1), cart additions (event_type=2), purchases (event_type=3), and cart abandonments.
2. Create a CTE (product_viewed) to count page views and cart additions by joining SHOPPING_CART_PAGE_HIERARCHY and SHOPPING_CART_EVENTS on page_id, filtering for products (product_id IS NOT NULL).
3. Create a CTE (product_purchased) to count purchases by checking for visits that have a purchase event (event_type=3) and filtering out page_ids (1,2,12,13).
4. Create a CTE (product_abandoned) to count cart abandonments by checking for visits that do NOT have a purchase event and filtering out page_ids (1,2,12,13).
5. Join the main SHOPPING_CART_PAGE_HIERARCHY table with all three CTEs on page_id to combine the counts for each product.
6. Select the page_id, page_name, and the aggregated counts from each CTE for the final output.
# [Sql]: WITH product_viewed AS (     SELECT         t1."page_id",         SUM(CASE WHEN "event_type" = 1 THEN 1 ELSE 0 END) AS "n_page_views",         SUM(CASE WHEN "event_type" = 2 THEN 1 ELSE 0 END) AS "n_added_to_cart"     FROM         "BANK_SALES_TRADING"."BANK_SALES_TRADING"."SHOPPING_CART_PAGE_HIERARCHY" AS t1     JOIN         "BANK_SALES_TRADING"."BANK_SALES_TRADING"."SHOPPING_CART_EVENTS" AS t2     ON         t1."page_id" = t2."page_id"     WHERE         t1."product_id" IS NOT NULL     GROUP BY         t1."page_id" ), product_purchased AS (     SELECT         t2."page_id",         SUM(CASE WHEN "event_type" = 2 THEN 1 ELSE 0 END) AS "purchased_from_cart"     FROM         "BANK_SALES_TRADING"."BANK_SALES_TRADING"."SHOPPING_CART_PAGE_HIERARCHY" AS t1     JOIN         "BANK_SALES_TRADING"."BANK_SALES_TRADING"."SHOPPING_CART_EVENTS" AS t2     ON         t1."page_id" = t2."page_id"     WHERE         t1."product_id" IS NOT NULL         AND EXISTS (             SELECT                 "visit_id"             FROM                 "BANK_SALES_TRADING"."BANK_SALES_TRADING"."SHOPPING_CART_EVENTS"             WHERE                 "event_type" = 3                 AND t2."visit_id" = "visit_id"         )         AND t1."page_id" NOT IN (1, 2, 12, 13)     GROUP BY         t2."page_id" ), product_abandoned AS (     SELECT         t2."page_id",         SUM(CASE WHEN "event_type" = 2 THEN 1 ELSE 0 END) AS "abandoned_in_cart"     FROM         "BANK_SALES_TRADING"."BANK_SALES_TRADING"."SHOPPING_CART_PAGE_HIERARCHY" AS t1     JOIN         "BANK_SALES_TRADING"."BANK_SALES_TRADING"."SHOPPING_CART_EVENTS" AS t2     ON         t1."page_id" = t2."page_id"     WHERE         t1."product_id" IS NOT NULL         AND NOT EXISTS (             SELECT                 "visit_id"             FROM                 "BANK_SALES_TRADING"."BANK_SALES_TRADING"."SHOPPING_CART_EVENTS"             WHERE                 "event_type" = 3                 AND t2."visit_id" = "visit_id"         )         AND t1."page_id" NOT IN (1, 2, 12, 13)     GROUP BY         t2."page_id" ) SELECT     t1."page_id",     t1."page_name",     t2."n_page_views" AS "number of product being viewed",     t2."n_added_to_cart" AS "number added to the cart",     t4."abandoned_in_cart" AS "without being purchased in cart",     t3."purchased_from_cart" AS "count of actual purchases" FROM     "BANK_SALES_TRADING"."BANK_SALES_TRADING"."SHOPPING_CART_PAGE_HIERARCHY" AS t1 JOIN     product_viewed AS t2  ON     t2."page_id" = t1."page_id" JOIN     product_purchased AS t3  ON      t3."page_id" = t1."page_id" JOIN     product_abandoned AS t4  ON      t4."page_id" = t1."page_id";