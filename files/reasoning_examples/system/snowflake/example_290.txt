# [Question]: For the NXT title that had the shortest match (excluding titles with "title change"), what were the names of the two wrestlers involved?
# [Schema links]: ['BELTS.name', 'BELTS.id', 'MATCHES.duration', 'MATCHES.title_id', 'MATCHES.winner_id', 'MATCHES.loser_id', 'MATCHES.card_id', 'WRESTLERS.name', 'WRESTLERS.id', 'CARDS.id', 'CARDS.location_id', 'CARDS.event_id', 'CARDS.promotion_id', 'LOCATIONS.name', 'LOCATIONS.id', 'EVENTS.name', 'EVENTS.id', 'PROMOTIONS.name', 'PROMOTIONS.id']
# [Analysis]: # Output: Letâ€™s think step by step.
1. Identify the relevant tables: `BELTS` for title information, `MATCHES` for match details including duration and wrestler IDs, `WRESTLERS` for wrestler names, `CARDS` to link matches to events and promotions, `LOCATIONS` and `EVENTS` for additional context, and `PROMOTIONS` to filter for NXT.
2. Filter for matches in the NXT promotion by joining `PROMOTIONS` and checking `PROMOTIONS.name = 'NXT'`.
3. Exclude titles with "title change" in their name by adding a condition: `BELTS.name NOT LIKE '%title change%'`.
4. Ensure valid match duration by filtering out empty strings: `MATCHES.duration <> ''`.
5. Join `BELTS` to `MATCHES` on `title_id`, `WRESTLERS` twice (for winner and loser) on `winner_id` and `loser_id`, `CARDS` on `card_id`, `LOCATIONS` on `location_id`, `EVENTS` on `event_id`, and `PROMOTIONS` on `promotion_id`.
6. Convert the duration string (format MM:SS) to seconds for ordering: `CAST(SPLIT_PART(M.duration, ':', 1) AS DOUBLE) * 60 + CAST(SPLIT_PART(M.duration, ':', 2) AS DOUBLE)`.
7. Use a Common Table Expression (CTE) named `MatchDetails` to compute a row number per title, ordered by duration ascending (shortest match first) using `ROW_NUMBER() OVER (PARTITION BY B.name ORDER BY duration_in_seconds ASC)`.
8. Create a second CTE `Rank1` to select only the row with rank 1 for each title (the shortest match per title).
9. From `Rank1`, extract the two wrestlers' names from the concatenated string "matches" (formatted as 'wrestler1 vs wrestler2') using `SUBSTR` and `POSITION` functions.
10. Order the results by match duration ascending and limit to 1 to get the absolute shortest match among all NXT titles (excluding those with "title change").
# [Sql]: WITH MatchDetails AS (     SELECT         B."name" AS "titles",         M."duration" AS "match_duration",         W1."name" || ' vs ' || W2."name" AS "matches",         M."win_type" AS "win_type",         L."name" AS "location",         E."name" AS "event",         ROW_NUMBER() OVER (PARTITION BY B."name" ORDER BY CAST(SPLIT_PART(M."duration", ':', 1) AS DOUBLE) * 60 + CAST(SPLIT_PART(M."duration", ':', 2) AS DOUBLE) ASC) AS "rank"     FROM          WWE.WWE.BELTS B     INNER JOIN WWE.WWE.MATCHES M ON M."title_id" = B."id"     INNER JOIN WWE.WWE.WRESTLERS W1 ON W1."id" = M."winner_id"     INNER JOIN WWE.WWE.WRESTLERS W2 ON W2."id" = M."loser_id"     INNER JOIN WWE.WWE.CARDS C ON C."id" = M."card_id"     INNER JOIN WWE.WWE.LOCATIONS L ON L."id" = C."location_id"     INNER JOIN WWE.WWE.EVENTS E ON E."id" = C."event_id"     INNER JOIN WWE.WWE.PROMOTIONS P ON P."id" = C."promotion_id"     WHERE         P."name" = 'NXT'         AND M."duration" <> ''         AND B."name" <> ''         AND B."name" NOT IN (             SELECT "name"              FROM WWE.WWE.BELTS              WHERE "name" LIKE '%title change%'         ) ), Rank1 AS (     SELECT          "titles",         "match_duration",         "matches",         "win_type",         "location",         "event"     FROM          MatchDetails     WHERE          "rank" = 1 ) SELECT     SUBSTR("matches", 1, POSITION(' vs ' IN "matches") - 1) AS "wrestler1",     SUBSTR("matches", POSITION(' vs ' IN "matches") + 4) AS "wrestler2" FROM     Rank1 ORDER BY CAST(SPLIT_PART("match_duration", ':', 1) AS DOUBLE) * 60 + CAST(SPLIT_PART("match_duration", ':', 2) AS DOUBLE)  LIMIT 1