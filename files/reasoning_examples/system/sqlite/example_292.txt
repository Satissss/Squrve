# [Question]: Please help me identify the top 3 bowlers who, in the overs where the maximum runs were conceded in each match, gave up the highest number of runs in a single over across all matches. For each of these bowlers, provide the match in which they conceded these maximum runs. Only consider overs that had the most runs conceded within their respective matches, and among these, determine which bowlers conceded the most runs in a single over overall.
# [Schema links]: ['BATSMAN_SCORED.match_id', 'BATSMAN_SCORED.over_id', 'BATSMAN_SCORED.ball_id', 'BATSMAN_SCORED.innings_no', 'BATSMAN_SCORED.runs_scored', 'EXTRA_RUNS.match_id', 'EXTRA_RUNS.over_id', 'EXTRA_RUNS.ball_id', 'EXTRA_RUNS.innings_no', 'EXTRA_RUNS.extra_runs', 'BALL_BY_BALL.match_id', 'BALL_BY_BALL.innings_no', 'BALL_BY_BALL.over_id', 'BALL_BY_BALL.bowler', 'PLAYER.player_id', 'PLAYER.player_name']
# [Analysis]: # Output: Letâ€™s think step by step.
1. Combine runs from BATSMAN_SCORED and EXTRA_RUNS tables to get total runs per ball using UNION ALL, casting runs to DOUBLE for consistency.
2. Aggregate the combined runs by match_id, innings_no, and over_id to calculate total runs scored per over.
3. For each match, find the maximum runs conceded in any over using MAX and GROUP BY match_id.
4. Identify the specific overs in each match that conceded these maximum runs by joining the over runs with the max runs per match.
5. Link these top overs to the bowlers who bowled them by joining with BALL_BY_BALL on match_id, innings_no, and over_id.
6. Select the top 3 bowlers with the highest runs conceded in a single over by ordering by maximum_runs in descending order and limiting to 3.
7. Join with PLAYER table to get bowler names from player_id.
8. Order the final results by maximum_runs descending, then by match_id and player_name for consistent output.
# [Sql]: WITH COMBINED_RUNS AS (     SELECT "match_id", "over_id", "ball_id", "innings_no", CAST("runs_scored" AS DOUBLE) AS "runs"     FROM IPL.IPL.BATSMAN_SCORED     UNION ALL     SELECT "match_id", "over_id", "ball_id", "innings_no", CAST("extra_runs" AS DOUBLE) AS "runs"     FROM IPL.IPL.EXTRA_RUNS ), OVER_RUNS AS (     SELECT "match_id", "innings_no", "over_id", SUM("runs") AS "runs_scored"     FROM COMBINED_RUNS     GROUP BY "match_id", "innings_no", "over_id" ), MAX_OVER_RUNS AS (     SELECT "match_id", MAX("runs_scored") AS "max_runs"     FROM OVER_RUNS     GROUP BY "match_id" ), TOP_OVERS AS (     SELECT o."match_id", o."innings_no", o."over_id", o."runs_scored"     FROM OVER_RUNS o     JOIN MAX_OVER_RUNS m ON o."match_id" = m."match_id" AND o."runs_scored" = m."max_runs" ), TOP_BOWLERS AS (     SELECT         bb."match_id",         t."runs_scored" AS "maximum_runs",         bb."bowler"     FROM IPL.IPL.BALL_BY_BALL bb     JOIN TOP_OVERS t ON bb."match_id" = t."match_id"     AND bb."innings_no" = t."innings_no"     AND bb."over_id" = t."over_id"     GROUP BY bb."match_id", t."runs_scored", bb."bowler" ) SELECT     b."match_id",     p."player_name" FROM (     SELECT *     FROM TOP_BOWLERS     ORDER BY CAST("maximum_runs" AS DOUBLE) DESC     LIMIT 3 ) b JOIN IPL.IPL.PLAYER p ON p."player_id" = b."bowler" ORDER BY CAST(b."maximum_runs" AS DOUBLE) DESC, b."match_id", p."player_name";