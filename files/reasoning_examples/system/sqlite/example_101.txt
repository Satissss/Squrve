# [Question]: Can you provide a breakdown of how many times each product was viewed, how many times they were added to the shopping cart, and how many times they were left in the cart without being purchased? Also, give me the count of actual purchases for each product. Ensure that products with a page id in (1, 2, 12, 13) are filtered out.
# [Schema links]: ["shopping_cart_page_hierarchy.page_id", "shopping_cart_events.event_type", "shopping_cart_events.page_id", "shopping_cart_events.visit_id", "shopping_cart_page_hierarchy.page_name"]
# [Analysis]: Letâ€™s think step by step.
1. Identify the relevant tables: `shopping_cart_page_hierarchy` (page_id, page_name) and `shopping_cart_events` (event_type, page_id, visit_id).
2. Filter out page_ids 1, 2, 12, 13 using `WHERE page_id NOT IN (1, 2, 12, 13)`.
3. Calculate views (event_type=1) and adds to cart (event_type=2) using conditional aggregation in CTE `product_viewed`.
4. Calculate purchases by identifying adds (event_type=2) where the visit_id has an associated purchase event (event_type=3) in CTE `product_purchased`.
5. Calculate abandoned items by identifying adds (event_type=2) where the visit_id lacks a purchase event (event_type=3) in CTE `product_abandoned`.
6. Join all CTEs with `shopping_cart_page_hierarchy` on page_id to include page_name and aggregate metrics.
7. Combine results using final SELECT to present page_id, page_name, and all calculated metrics.
# [Sql]: WITH product_viewed AS (     SELECT          t1.page_id,          SUM(CASE WHEN t2.event_type = 1 THEN 1 ELSE 0 END) AS n_page_views,          SUM(CASE WHEN t2.event_type = 2 THEN 1 ELSE 0 END) AS n_added_to_cart     FROM          shopping_cart_page_hierarchy AS t1     JOIN          shopping_cart_events AS t2      ON          t1.page_id = t2.page_id     WHERE          t1.page_id NOT IN (1, 2, 12, 13)     GROUP BY          t1.page_id ),  product_purchased AS (     SELECT          t2.page_id,          SUM(CASE WHEN t2.event_type = 2 THEN 1 ELSE 0 END) AS purchased_from_cart     FROM          shopping_cart_page_hierarchy AS t1     JOIN          shopping_cart_events AS t2      ON          t1.page_id = t2.page_id     WHERE          t1.page_id NOT IN (1, 2, 12, 13)         AND EXISTS (             SELECT                  visit_id              FROM                  shopping_cart_events              WHERE                  event_type = 3                  AND t2.visit_id = visit_id         )     GROUP BY          t2.page_id ),  product_abandoned AS (     SELECT          t2.page_id,          SUM(CASE WHEN t2.event_type = 2 THEN 1 ELSE 0 END) AS abandoned_in_cart     FROM          shopping_cart_page_hierarchy AS t1     JOIN          shopping_cart_events AS t2      ON          t1.page_id = t2.page_id     WHERE          t1.page_id NOT IN (1, 2, 12, 13)         AND NOT EXISTS (             SELECT                  visit_id              FROM                  shopping_cart_events              WHERE                  event_type = 3                  AND t2.visit_id = visit_id         )     GROUP BY          t2.page_id ) SELECT      t1.page_id,      t1.page_name,      t2.n_page_views AS 'number of product being viewed',      t2.n_added_to_cart AS 'number added to the cart',      t4.abandoned_in_cart AS 'without being purchased in cart',      t3.purchased_from_cart AS 'count of actual purchases' FROM      shopping_cart_page_hierarchy AS t1 JOIN      product_viewed AS t2  ON      t2.page_id = t1.page_id JOIN      product_purchased AS t3  ON      t3.page_id = t1.page_id JOIN      product_abandoned AS t4  ON      t4.page_id = t1.page_id;