# [Question]: Can you determine which of our top 10 paying customers had the highest payment difference in any given month? I’d like to know the highest payment difference for this customer, with the result rounded to two decimal places.
# [Schema links]: [payment.customer_id, payment.amount, payment.payment_date, customer.customer_id, customer.first_name, customer.last_name]
# [Analysis]: Let’s think step by step.
1. Identify the relevant tables and columns: `payment` (customer_id, amount, payment_date) and `customer` (customer_id, first_name, last_name).
2. Calculate the total payments per customer to determine the top 10 customers by summing their `amount` and grouping by `customer_id`.
3. Extract the month and year from `payment_date` to analyze payments on a monthly basis.
4. Compute monthly totals for each customer by summing their payments grouped by `customer_id`, month, and year.
5. Calculate the payment difference between consecutive months for each customer using the LAG function to compare current and previous month's totals.
6. Round the payment difference to two decimal places using `ROUND` and `ABS` to ensure non-negative values.
7. Filter the top 10 customers by joining monthly payment data with the top_10_customers CTE.
8. Determine the maximum payment difference for each top 10 customer by grouping their payment differences and taking the maximum value.
9. Join the results with the `customer` table to retrieve the first and last names of the customer with the highest maximum difference.
10. Order the final results by the maximum payment difference in descending order and limit to the top result.
# [Sql]: WITH monthly_payments AS (     SELECT          p.customer_id,          p.amount,          strftime('%m', p.payment_date) AS payment_month,          strftime('%Y', p.payment_date) AS payment_year      FROM          payment p  ), customer_monthly_sums AS (     SELECT          mp.customer_id,          mp.payment_month,          mp.payment_year,          SUM(mp.amount) AS total_paid      FROM          monthly_payments mp      GROUP BY          mp.customer_id,          mp.payment_month,          mp.payment_year  ), top_10_customers AS (     SELECT          mp.customer_id,          SUM(mp.amount) AS total_payments      FROM          monthly_payments mp      GROUP BY          mp.customer_id      ORDER BY          total_payments DESC      LIMIT          10  ), payment_differences AS (     SELECT          cms.customer_id,          cms.payment_month,          cms.payment_year,          cms.total_paid,          LAG(cms.total_paid) OVER (PARTITION BY cms.customer_id ORDER BY cms.payment_year, cms.payment_month) AS previous_month_paid,          ROUND(ABS(cms.total_paid - COALESCE(LAG(cms.total_paid) OVER (PARTITION BY cms.customer_id ORDER BY cms.payment_year, cms.payment_month), 0)), 2) AS payment_diff      FROM          customer_monthly_sums cms      JOIN          top_10_customers tc ON cms.customer_id = tc.customer_id  ), max_diff_per_customer AS (     SELECT          pd.customer_id,          MAX(pd.payment_diff) AS max_payment_diff      FROM          payment_differences pd      WHERE          pd.payment_diff IS NOT NULL      GROUP BY          pd.customer_id  ), customer_info AS (     SELECT          c.customer_id,          c.first_name,          c.last_name      FROM          customer c  )  SELECT      ci.first_name,      ci.last_name,      ROUND(mpc.max_payment_diff, 2) AS max_payment_diff  FROM      max_diff_per_customer mpc  JOIN      customer_info ci ON mpc.customer_id = ci.customer_id  ORDER BY      mpc.max_payment_diff DESC  LIMIT      1;