# [Question]: For the NXT title that had the shortest match (excluding titles with "title change"), what were the names of the two wrestlers involved?
# [Schema links]: ["Belts.name", "Matches.duration", "Wrestlers.name", "Matches.win_type", "Locations.name", "Events.name", "Matches.title_id", "Belts.id", "Wrestlers.id", "Matches.winner_id", "Matches.loser_id", "Cards.id", "Matches.card_id", "Locations.id", "Cards.location_id", "Events.id", "Cards.event_id", "Promotions.id", "Cards.promotion_id", "Promotions.name"]
# [Analysis]: Letâ€™s think step by step.
1. Identify the relevant tables and columns: `Belts.name`, `Matches.duration`, `Wrestlers.name`, `Matches.win_type`, `Promotions.name`, and relationships between `Matches`, `Belts`, `Wrestlers`, `Cards`, `Locations`, `Events`, and `Promotions`.
2. Filter for matches under the "NXT" promotion by joining `Promotions` to `Cards` and ensuring `Promotions.name = 'NXT'`.
3. Exclude titles containing "title change" by filtering `Belts.name NOT LIKE '%title change%'`.
4. Join `Matches` with `Wrestlers` on both `winner_id` and `loser_id` to retrieve both wrestlers' names.
5. Calculate the shortest match duration for each title using `ROW_NUMBER()` partitioned by `Belts.name` and ordered by `Matches.duration ASC`.
6. Create a CTE `MatchDetails` to store title name, duration, concatenated wrestler names, and rank.
7. Filter rows where `rank = 1` to get the shortest match for each title into `Rank1`.
8. Extract the shortest match overall from `Rank1` by ordering by `match_duration` and limiting to 1.
9. Split the concatenated wrestler names into separate columns using string functions.
# [Sql]: WITH MatchDetails AS (     SELECT         b.name AS titles,         m.duration AS match_duration,         w1.name || ' vs ' || w2.name AS matches,         m.win_type AS win_type,         l.name AS location,         e.name AS event,         ROW_NUMBER() OVER (PARTITION BY b.name ORDER BY m.duration ASC) AS rank     FROM          Belts b     INNER JOIN Matches m ON m.title_id = b.id     INNER JOIN Wrestlers w1 ON w1.id = m.winner_id     INNER JOIN Wrestlers w2 ON w2.id = m.loser_id     INNER JOIN Cards c ON c.id = m.card_id     INNER JOIN Locations l ON l.id = c.location_id     INNER JOIN Events e ON e.id = c.event_id     INNER JOIN Promotions p ON p.id = c.promotion_id     WHERE         p.name = 'NXT'         AND m.duration <> ''         AND b.name <> ''         AND b.name NOT IN (             SELECT name              FROM Belts              WHERE name LIKE '%title change%'         ) ), Rank1 AS ( SELECT      titles,     match_duration,     matches,     win_type,     location,     event FROM      MatchDetails WHERE      rank = 1 ) SELECT     SUBSTR(matches, 1, INSTR(matches, ' vs ') - 1) AS wrestler1,     SUBSTR(matches, INSTR(matches, ' vs ') + 4) AS wrestler2 FROM Rank1 ORDER BY match_duration  LIMIT 1