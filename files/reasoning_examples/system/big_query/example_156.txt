# [Question]: Please perform a 7-day retention analysis for users who first session start the app during the week starting on July 2, 2018. For each week from Week 0 (the week of their first session) to Week 4, provide the total number of new users in Week 0 and the number of retained users for each subsequent week. Ensuring that you only count events up to October 2, 2018, and group dates by Monday-based weeks
# [Schema links]: ["analytics_153293282.events_*.event_date", "analytics_153293282.events_*.user_pseudo_id", "analytics_153293282.events_*.user_first_touch_timestamp", "analytics_153293282.events_*.event_name"]
# [Analysis]: Let’s think step by step.
1. Identify the cohort week as July 2-8, 2018 and set end date to October 2, 2018 using CTE `dates`.
2. Create `date_table` to parse event dates, flag new users (first session day), and filter 'session_start' events.
3. Extract `new_user_list` containing users with first session in the cohort week (July 2-8).
4. Calculate `days_since_start` by joining all user events with their cohort date in `days_since_start_table`.
5. Convert days to weeks in `weeks_retention` using CEIL(days/7), treating week 0 as first week.
6. Filter retention data to include only cohorts ≤ min_date (ensuring 4-week follow-up) and weeks ≤4.
7. Aggregate counts of distinct users per cohort week and week_since_start in `RETENTION_INFO`.
8. Select retention results specifically for the July 2 cohort week (week_cohort = '2018-07-02').
# [Sql]: WITH dates AS (    SELECT         DATE('2018-07-02') AS start_date,        DATE('2018-10-02') AS end_date,        DATE_ADD(DATE_TRUNC(DATE('2018-10-02'), WEEK(MONDAY)), INTERVAL -4 WEEK) AS min_date),date_table AS (    SELECT DISTINCT        PARSE_DATE('%Y%m%d', event_date) AS event_date,        user_pseudo_id,        CASE             WHEN DATE_DIFF(PARSE_DATE('%Y%m%d', event_date), DATE(TIMESTAMP_MICROS(user_first_touch_timestamp)), DAY) = 0            THEN 1            ELSE 0        END AS is_new_user    FROM         `firebase-public-project.analytics_153293282.events_*`    WHERE         event_name = 'session_start'),new_user_list AS (    SELECT DISTINCT        user_pseudo_id,        event_date    FROM         date_table    WHERE         is_new_user = 1        AND event_date BETWEEN '2018-07-02' AND '2018-07-08'),days_since_start_table AS (    SELECT DISTINCT        is_new_user,        nu.event_date AS date_cohort,        dt.user_pseudo_id,        dt.event_date,        DATE_DIFF(dt.event_date, nu.event_date, DAY) AS days_since_start    FROM         date_table dt    JOIN         new_user_list nu ON dt.user_pseudo_id = nu.user_pseudo_id),weeks_retention AS (    SELECT        date_cohort,        DATE_TRUNC(date_cohort, WEEK(MONDAY)) AS week_cohort,        user_pseudo_id,        days_since_start,        CASE             WHEN days_since_start = 0            THEN 0            ELSE CEIL(days_since_start / 7)        END AS weeks_since_start    FROM         days_since_start_table),RETENTION_INFO AS (    SELECT        week_cohort,        weeks_since_start,        COUNT(DISTINCT user_pseudo_id) AS retained_users    FROM        weeks_retention    WHERE        week_cohort <= (SELECT min_date FROM dates)    GROUP BY        week_cohort,        weeks_since_start    HAVING        weeks_since_start <= 4    ORDER BY        week_cohort,        weeks_since_start)SELECT     weeks_since_start,     retained_users FROM     RETENTION_INFO WHERE     week_cohort = DATE('2018-07-02');