# [Question]: Tell me the most purchased other products and their quantities by customers who bought the Google Red Speckled Tee each month for the three months starting from November 2020.
# [Schema links]: ["ga4_obfuscated_sample_ecommerce.events_*.user_pseudo_id", "ga4_obfuscated_sample_ecommerce.events_*.event_name", "ga4_obfuscated_sample_ecommerce.events_*.items", "ga4_obfuscated_sample_ecommerce.events_*.items.item_name", "ga4_obfuscated_sample_ecommerce.events_*.items.quantity"]
# [Analysis]: Letâ€™s think step by step.
1. Identify the relevant tables and columns: `events_*` (user_pseudo_id, event_name, items.item_name, items.quantity).
2. Define the target product as 'Google Red Speckled Tee' using a CTE named Params.
3. Create a DateRanges CTE with start_date, end_date, and period for November 2020, December 2020, and January 2021.
4. Extract purchase events within the defined date ranges using a CTE named PurchaseEvents.
5. Identify users who purchased the target product in each period using ProductABuyers CTE.
6. Calculate total quantities of other products (excluding target product) purchased by these users in each period using TopProducts CTE.
7. Rank products by quantity within each period to find the top product using RANK() in TopProductPerPeriod CTE.
8. Select the top-ranked product for each period from the ranked results.
9. Format the final output with period, item_name, and item_quantity ordered by period.
# [Sql]: WITH Params AS (   SELECT 'Google Red Speckled Tee' AS selected_product ), DateRanges AS (   SELECT '20201101' AS start_date, '20201130' AS end_date, '202011' AS period UNION ALL   SELECT '20201201', '20201231', '202012' UNION ALL   SELECT '20210101', '20210131', '202101' ), PurchaseEvents AS (   SELECT     period,     user_pseudo_id,     items   FROM     DateRanges   JOIN     `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_*`     ON _TABLE_SUFFIX BETWEEN start_date AND end_date   WHERE     event_name = 'purchase' ), ProductABuyers AS (   SELECT DISTINCT     period,     user_pseudo_id   FROM     Params,     PurchaseEvents,     UNNEST(items) AS items   WHERE     items.item_name = selected_product ), TopProducts AS (   SELECT     pe.period,     items.item_name AS item_name,     SUM(items.quantity) AS item_quantity   FROM     Params,     PurchaseEvents pe,     UNNEST(items) AS items   WHERE     user_pseudo_id IN (SELECT user_pseudo_id FROM ProductABuyers pb WHERE pb.period = pe.period)     AND items.item_name != selected_product   GROUP BY     pe.period, items.item_name ), TopProductPerPeriod AS (   SELECT     period,     item_name,     item_quantity   FROM (     SELECT       period,       item_name,       item_quantity,       RANK() OVER (PARTITION BY period ORDER BY item_quantity DESC) AS rank     FROM       TopProducts   )   WHERE     rank = 1 ) SELECT   period,   item_name,   item_quantity FROM   TopProductPerPeriod ORDER BY   period;