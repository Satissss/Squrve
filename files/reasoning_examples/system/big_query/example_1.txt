# [Question]: How many pseudo users were active in the last 7 days but inactive in the last 2 days as of January 7, 2021?
# [Schema links]: ["ga4_obfuscated_sample_ecommerce.events_*.user_pseudo_id", "ga4_obfuscated_sample_ecommerce.events_*.event_params.key", "ga4_obfuscated_sample_ecommerce.events_*.event_params.value.int_value", "ga4_obfuscated_sample_ecommerce.events_*.event_timestamp"]
# [Analysis]: Letâ€™s think step by step.
1. Identify the relevant columns: `user_pseudo_id`, `event_params.key`, `event_params.value.int_value`, and `event_timestamp` from the `events_*` tables.
2. Define the time ranges: Last 7 days (January 1 to January 7, 2021) and last 2 days (January 5 to January 7, 2021).
3. Filter events where `event_params.key` is 'engagement_time_msec' and `event_params.value.int_value` > 0 to identify active users.
4. Create a subquery (MDaysUsers) for users active in the last 7 days by filtering `event_timestamp` and `_TABLE_SUFFIX` between '20210101' and '20210107'.
5. Create another subquery (NDaysUsers) for users active in the last 2 days by filtering `event_timestamp` and `_TABLE_SUFFIX` between '20210105' and '20210107'.
6. Perform a LEFT JOIN between MDaysUsers and NDaysUsers on `user_pseudo_id` to find users active in the 7-day window but not in the 2-day window.
7. Filter the joined result where NDaysUsers.user_pseudo_id IS NULL to exclude users active in the last 2 days.
8. Count the distinct user_pseudo_ids from the filtered result to get the desired count.
# [Sql]: SELECT   COUNT(DISTINCT MDaysUsers.user_pseudo_id) AS n_day_inactive_users_count FROM   (     SELECT       user_pseudo_id     FROM       `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_*` AS T     CROSS JOIN       UNNEST(T.event_params) AS event_params     WHERE       event_params.key = 'engagement_time_msec' AND event_params.value.int_value > 0       /* Has engaged in last M = 7 days */       AND event_timestamp > UNIX_MICROS(TIMESTAMP_SUB(TIMESTAMP('2021-01-07 23:59:59'), INTERVAL 7 DAY))       /* Include only relevant tables based on the fixed timestamp */       AND _TABLE_SUFFIX BETWEEN '20210101' AND '20210107'   ) AS MDaysUsers LEFT JOIN   (     SELECT       user_pseudo_id     FROM       `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_*` AS T     CROSS JOIN       UNNEST(T.event_params) AS event_params     WHERE       event_params.key = 'engagement_time_msec' AND event_params.value.int_value > 0       /* Has engaged in last N = 2 days */       AND event_timestamp > UNIX_MICROS(TIMESTAMP_SUB(TIMESTAMP('2021-01-07 23:59:59'), INTERVAL 2 DAY))       /* Include only relevant tables based on the fixed timestamp */       AND _TABLE_SUFFIX BETWEEN '20210105' AND '20210107'   ) AS NDaysUsers ON MDaysUsers.user_pseudo_id = NDaysUsers.user_pseudo_id WHERE   NDaysUsers.user_pseudo_id IS NULL;