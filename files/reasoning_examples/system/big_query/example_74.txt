# [Question]: Identify variants on chromosome 12 and, for each variant, calculate the chi-squared score using allele counts in cases and controls, where cases are individuals from the 'EAS' super population and controls are individuals from all other super populations. Apply Yates's correction for continuity in the chi-squared calculation, ensuring that the expected counts for each allele in both groups are at least 5. Return the start position, end position, and chi-squared score of the top variants where the chi-squared score is no less than 29.71679.
# [Schema links]: [1000_genomes.variants.reference_name, 1000_genomes.variants.start, 1000_genomes.variants.end, 1000_genomes.variants.reference_bases, 1000_genomes.variants.alternate_bases, 1000_genomes.variants.vt, 1000_genomes.variants.call.call_set_name, 1000_genomes.variants.call.genotype, 1000_genomes.sample_info.super_population, 1000_genomes.sample_info.sample]
# [Analysis]: Let’s think step by step.
1. Identify variants on chromosome 12 by filtering rows where `reference_name` is '12'.
2. Join `variants` with `sample_info` using `call_set_name` linked to `sample` to access super_population information.
3. Classify samples into cases (EAS super_population) and controls (non-EAS) using the `is_case` flag.
4. For each variant, calculate allele counts (ref_count and alt_count) per genotype call.
5. Aggregate counts across all samples, separating case and control groups for reference and alternate alleles.
6. Compute total allele counts, case/control group sizes, and expected allele counts for both groups.
7. Apply Yates's correction by adjusting observed counts with ±0.5 before calculating squared differences.
8. Calculate the chi-squared score using the corrected formula across all allele-group combinations.
9. Filter variants where expected counts (ref/control, ref/case, alt/control, alt/case) are all ≥5.
10. Select variants with chi-squared scores ≥29.71679, ordering by score in descending order.
# [Sql]: SELECT * FROM (   SELECT     `start`,     `end`,     ROUND(       POW(ABS(case_ref_count - (ref_count / allele_count) * case_count) - 0.5, 2) / ((ref_count / allele_count) * case_count) +       POW(ABS(control_ref_count - (ref_count / allele_count) * control_count) - 0.5, 2) / ((ref_count / allele_count) * control_count) +       POW(ABS(case_alt_count - (alt_count / allele_count) * case_count) - 0.5, 2) / ((alt_count / allele_count) * case_count) +       POW(ABS(control_alt_count - (alt_count / allele_count) * control_count) - 0.5, 2) / ((alt_count / allele_count) * control_count),       3     ) AS chi_squared_score   FROM (     SELECT       reference_name,       `start`,       `end`,       reference_bases,       alternate_bases,       vt,       SUM(ref_count + alt_count) AS allele_count,       SUM(ref_count) AS ref_count,       SUM(alt_count) AS alt_count,       SUM(IF(is_case, CAST(ref_count + alt_count AS INT64), 0)) AS case_count,       SUM(IF(NOT is_case, CAST(ref_count + alt_count AS INT64), 0)) AS control_count,       SUM(IF(is_case, ref_count, 0)) AS case_ref_count,       SUM(IF(is_case, alt_count, 0)) AS case_alt_count,       SUM(IF(NOT is_case, ref_count, 0)) AS control_ref_count,       SUM(IF(NOT is_case, alt_count, 0)) AS control_alt_count     FROM (       SELECT         v.reference_name,         v.`start`,         v.`end`,         v.reference_bases,         v.alternate_bases,         v.vt,         ('EAS' = p.super_population) AS is_case,         IF(call.genotype[SAFE_OFFSET(0)] = 0, 1, 0) AS ref_count,         IF(call.genotype[SAFE_OFFSET(0)] = 1, 1, 0) AS alt_count       FROM         `spider2-public-data.1000_genomes.variants` AS v,         UNNEST(v.call) AS call       JOIN         `spider2-public-data.1000_genomes.sample_info` AS p       ON         call.call_set_name = p.sample       WHERE         v.reference_name = '12'     )     GROUP BY       reference_name,       `start`,       `end`,       reference_bases,       alternate_bases,       vt   )   WHERE     (ref_count / allele_count) * case_count >= 5.0     AND (ref_count / allele_count) * control_count >= 5.0     AND (alt_count / allele_count) * case_count >= 5.0     AND (alt_count / allele_count) * control_count >= 5.0 ) WHERE   chi_squared_score >= 29.71679 ORDER BY   chi_squared_score DESC